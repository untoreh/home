precompile(Tuple{typeof(fzf_jll.find_artifact_dir)})
precompile(Tuple{typeof(Base.invokelatest), Any})
precompile(Tuple{typeof(JLLWrappers.get_julia_libpaths)})
precompile(Tuple{Type{Task}, Any})
precompile(Tuple{typeof(Base.schedule), Task})
precompile(Tuple{typeof(OhMyREPL.colorscheme!), String})
precompile(Tuple{typeof(Base.getproperty), OhMyREPL.Passes.SyntaxHighlighter.SyntaxHighlighterSettings, Symbol})
precompile(Tuple{typeof(REPL.find_hist_file)})
precompile(Tuple{OhMyREPL.var"#2#5", REPL.LineEditREPL})
precompile(Tuple{typeof(Base.getindex), Array{REPL.LineEdit.TextInterface, 1}, Int64})
precompile(Tuple{OhMyREPL.var"#3#6"})
precompile(Tuple{REPL.LineEdit.var"#27#28"{OhMyREPL.Prompt.var"#26#53", String}, Any, Any})
precompile(Tuple{typeof(Base.:(<)), UInt32, UInt32})
precompile(Tuple{typeof(Base.:(>)), UInt32, UInt32})
precompile(Tuple{typeof(Base.:(!=)), UInt32, UInt32})
precompile(Tuple{OhMyREPL.Prompt.var"#26#53", Any, Any, Any})
precompile(Tuple{typeof(Base.withenv), OhMyREPL.Prompt.var"#27#54"{REPL.LineEdit.MIState, Module}, Pair{String, Nothing}})
precompile(Tuple{typeof(JLFzf.read_repl_hist)})
precompile(Tuple{typeof(JLFzf.inter_fzf), Array{Base.SubString{String}, 1}, String, Vararg{String}})
precompile(Tuple{typeof(JLFzf.inter_fzf), String, String, Vararg{String}})
precompile(Tuple{typeof(fzf_jll.fzf), Function})
precompile(Tuple{fzf_jll.var"##fzf#3", Bool, Bool, typeof(fzf_jll.fzf), Function})
precompile(Tuple{typeof(JLLWrappers.withenv_executable_wrapper), Function, String, String, String, Bool, Bool})
precompile(Tuple{typeof(JLLWrappers.adjust_ENV!), Base.Dict{K, V} where V where K, String, String, Bool, Bool})
precompile(Tuple{typeof(Base.iterate), Base.Dict{String, String}})
precompile(Tuple{typeof(Base.iterate), Base.Dict{String, String}, Int64})
precompile(Tuple{typeof(Base.withenv), JLLWrappers.var"#2#3"{JLFzf.var"#1#2"{String, NTuple{4, String}}, String}, Pair{String, String}, Vararg{Pair{String, String}}})
precompile(Tuple{JLLWrappers.var"#2#3"{JLFzf.var"#1#2"{String, NTuple{4, String}}, String}})
precompile(Tuple{JLFzf.var"#1#2"{String, NTuple{4, String}}, String})
precompile(Tuple{typeof(Base.arg_gen), NTuple{4, String}})
precompile(Tuple{typeof(Base.read), Base.PipeEndpoint})
precompile(Tuple{Base.var"#764#765"{Base.GenericIOBuffer{Array{UInt8, 1}}, Bool, Base.PipeEndpoint, Base.PipeEndpoint, Base.GenericIOBuffer{Array{UInt8, 1}}}})
precompile(Tuple{typeof(JLFzf.insert_history_to_repl), REPL.LineEdit.MIState, Base.SubString{String}})
precompile(Tuple{typeof(Base.write), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String})
precompile(Tuple{typeof(Base.Unicode.textwidth), String})
precompile(Tuple{typeof(Base.unsafe_write), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.getproperty), REPL.LineEdit.ModeState, Symbol})
precompile(Tuple{typeof(Base.position), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.seek), Base.GenericIOBuffer{Array{UInt8, 1}}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:keep,), Tuple{Bool}}, typeof(Base.readline), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.divrem), Int64, Int64})
precompile(Tuple{REPL.LineEdit.var"#27#28"{OhMyREPL.Prompt.var"#21#48", String}, Any, Any})
precompile(Tuple{OhMyREPL.Prompt.var"#21#48", Any, Any, Any})
precompile(Tuple{REPL.LineEdit.var"##edit_abort#113", Any, typeof(REPL.LineEdit.edit_abort), REPL.LineEdit.MIState, Bool})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Int64}, Int64, Int64})
precompile(Tuple{REPL.var"#60#66"{REPL.REPLBackendRef}})
